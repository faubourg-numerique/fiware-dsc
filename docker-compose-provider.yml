services:
    postgresql:
        image: "postgres:${POSTGRESQL_TAG}"
        hostname: "postgresql"
        environment:
            POSTGRES_DB: "keycloak"
            POSTGRES_USER: "keycloak"
            POSTGRES_PASSWORD: "keycloak"
        restart: "always"
        volumes:
            - "./volumes/postgresql:/var/lib/postgresql/data"

    mongo-db:
        image: "mongo:${MONGO_DB_TAG}"
        hostname: "mongo-db"
        environment:
            MONGO_INITDB_ROOT_USERNAME: "root"
            MONGO_INITDB_ROOT_PASSWORD: "root"
        restart: "always"
        volumes:
            - "./volumes/mongo-db:/data/db"

    mysql-keyrock:
        image: "mysql:${MYSQL_KEYROCK_TAG}"
        hostname: "mysql-keyrock"
        environment:
            MYSQL_ROOT_PASSWORD: "root"
        restart: "always"
        volumes:
            - "./volumes/mysql-keyrock:/var/lib/mysql"

    mysql-trusted-issuers-list:
        image: "mysql:${MYSQL_TRUSTED_ISSUERS_LIST_TAG}"
        hostname: "mysql-trusted-issuers-list"
        environment:
            MYSQL_USER: "trusted-issuers-list"
            MYSQL_PASSWORD: "trusted-issuers-list"
            MYSQL_DATABASE: "trusted-issuers-list"
        restart: "always"
        volumes:
            - "./volumes/mysql-trusted-issuers-list:/var/lib/mysql"

    mysql-credentials-config-service:
        image: "mysql:${MYSQL_CREDENTIALS_CONFIG_SERVICE_TAG}"
        hostname: "mysql-credentials-config-service"
        environment:
            MYSQL_USER: "credentials-config-service"
            MYSQL_PASSWORD: "credentials-config-service"
            MYSQL_DATABASE: "credentials-config-service"
        restart: "always"
        volumes:
            - "./volumes/mysql-credentials-config-service:/var/lib/mysql"

    orion-ld:
        image: "fiware/orion-ld:${ORION_LD_TAG}"
        hostname: "orion-ld"
        ports:
            - "${ORION_LD_PORT}:1026"
        environment:
            ORIONLD_EXPERIMENTAL: "TRUE"
            ORIONLD_MONGO_HOST: "mongo-db"
            ORIONLD_MONGO_USER: "root"
            ORIONLD_MONGO_PASSWORD: "root"
        restart: "always"
        depends_on:
            - "mongo-db"

    waltid-ssikit:
        image: "waltid/ssikit:${WALTID_SSIKIT_TAG}"
        hostname: "waltid-ssikit"
        ports:
            - "${WALTID_SSIKIT_CORE_API_PORT}:7000"
        command: ["serve", "-b", "0.0.0.0"]
        restart: "always"
        volumes:
            - "./config/waltid-ssikit/signatory.conf:/app/config/signatory.conf"
            - "./vc-templates:/vc-templates-runtime"
            - "./volumes/waltid-ssikit:/app/data"

    keycloak-vc-issuer:
        image: "quay.io/fiware/keycloak-vc-issuer:${KEYCLOAK_VC_ISSUER_TAG}"
        volumes:
            - "./volumes/keycloak-vc-issuer/providers:/target"

    keycloak:
        image: "quay.io/keycloak/keycloak:${KEYCLOAK_TAG}"
        hostname: "keycloak"
        user: "root"
        environment:
            KEYCLOAK_ADMIN: "${KEYCLOAK_ADMIN_USERNAME}"
            KEYCLOAK_ADMIN_PASSWORD: "${KEYCLOAK_ADMIN_PASSWORD}"
            KC_HOSTNAME_URL: "${KEYCLOAK_URL}"
            KC_HOSTNAME_ADMIN_URL: "${KEYCLOAK_URL}"
            KC_DB: "postgres"
            KC_DB_URL_HOST: "postgresql"
            KC_DB_URL_PORT: 5432
            KC_DB_URL_DATABASE: "keycloak"
            KC_DB_USERNAME: "keycloak"
            KC_DB_PASSWORD: "keycloak"
            KC_PROXY: "passthrough"
            KC_HTTP_ENABLED: "true"
            VCISSUER_WALTID_ADDRESS: "http://waltid-ssikit"
            VCISSUER_WALTID_CORE_PORT: 7000
            VCISSUER_WALTID_SIGNATORY_PORT: 7001
            VCISSUER_ISSUER_DID: "${DID}"
            VCISSUER_ISSUER_KEY_FILE: "/opt/keys/did.json"
        command: "start"
        restart: "always"
        volumes:
            - "./volumes/keycloak:/data"
            - "./volumes/keycloak-vc-issuer/providers:/opt/keycloak/providers"
            - "./did.json:/opt/keys/did.json"
        depends_on:
            - "postgresql"
            - "waltid-ssikit"
            - "keycloak-vc-issuer"

    keyrock:
        image: "quay.io/wi_stefan/keyrock:${KEYROCK_TAG}"
        hostname: "keyrock"
        ports:
            - "${KEYROCK_PORT}:3000"
        environment:
            IDM_DB_HOST: "mysql-keyrock"
            IDM_DB_USER: "root"
            IDM_DB_PASS: "root"
            IDM_DB_NAME: "keyrock"
            IDM_ADMIN_EMAIL: "${KEYROCK_ADMIN_EMAIL}"
            IDM_ADMIN_PASS: "${KEYROCK_ADMIN_PASSWORD}"
            IDM_SERVER_MAX_HEADER_SIZE: 32768
            IDM_AR_ID: "${DID}"
            IDM_AR_URL: "internal"
            IDM_PR_ID: "${TRUSTED_ISSUERS_REGISTRY_ID}"
            IDM_PR_URL: "${TRUSTED_ISSUERS_REGISTRY_URL}"
            IDM_PR_TOKEN_ENDPOINT: "${TRUSTED_ISSUERS_REGISTRY_URL}${TRUSTED_ISSUERS_REGISTRY_TOKEN_ENDPOINT}"
            IDM_PR_PARTIES_ENDPOINT: "${TRUSTED_ISSUERS_REGISTRY_URL}${TRUSTED_ISSUERS_REGISTRY_PARTIES_PARTIES}"
            IDM_PR_CLIENT_ID: "${DID}"
            IDM_PR_CLIENT_CRT: "${CERTIFICATE}"
            IDM_PR_CLIENT_KEY: "${PRIVATE_KEY}"
        restart: "always"
        depends_on:
            - "mysql-keyrock"

    activation-service:
        image: "quay.io/i4trust/activation-service:${ACTIVATION_SERVICE_TAG}"
        hostname: "activation-service"
        # environment:
        #     AS_LOG_LEVEL: "DEBUG"
        restart: "always"
        volumes:
            - "./config/activation-service/as.yml:/var/aservice/config/as.yml"

    trusted-issuers-list:
        image: "quay.io/fiware/trusted-issuers-list:${TRUSTED_ISSUERS_LIST_TAG}"
        hostname: "trusted-issuers-list"
        ports:
            - "${TRUSTED_ISSUERS_LIST_PORT}:8080"
        environment:
            DATASOURCES_DEFAULT_URL: "jdbc:mysql://mysql-trusted-issuers-list:3306/trusted-issuers-list"
            DATASOURCES_DEFAULT_DRIVER_CLASS_NAME: "com.mysql.cj.jdbc.Driver"
            DATASOURCES_DEFAULT_USERNAME: "trusted-issuers-list"
            DATASOURCES_DEFAULT_PASSWORD: "trusted-issuers-list"
            DATASOURCES_DEFAULT_DIALECT: "MYSQL"
        restart: "always"
        depends_on:
            - "mysql-trusted-issuers-list"

    credentials-config-service:
        image: "quay.io/fiware/credentials-config-service:${CREDENTIALS_CONFIG_SERVICE_TAG}"
        hostname: "credentials-config-service"
        ports:
            - "${CREDENTIALS_CONFIG_SERVICE_PORT}:8080"
        environment:
            DATASOURCES_DEFAULT_URL: "jdbc:mysql://mysql-credentials-config-service:3306/credentials-config-service"
            DATASOURCES_DEFAULT_DRIVER_CLASS_NAME: "com.mysql.cj.jdbc.Driver"
            DATASOURCES_DEFAULT_USERNAME: "credentials-config-service"
            DATASOURCES_DEFAULT_PASSWORD: "credentials-config-service"
            DATASOURCES_DEFAULT_DIALECT: "MYSQL"
        restart: "always"
        depends_on:
            - "mysql-credentials-config-service"

    vc-verifier:
        image: "quay.io/fiware/vcverifier:${VC_VERIFIER_TAG}"
        hostname: "vc-verifier"
        restart: "always"
        volumes:
            - "./config/vc-verifier/server.yaml:/go/src/app/server.yaml"

    dsba-pdp:
        image: "quay.io/fiware/dsba-pdp:${DSBA_PDP_TAG}"
        hostname: "dsba-pdp"
        environment:
            # LOG_LEVEL: "DEBUG"
            JSON_LOGGING_ENABLED: "false"
            LOG_REQUESTS: "true"
            ISHARE_ENABLED: "true"
            ISHARE_TRUSTED_LIST_ENABLED: "true"
            ISHARE_CERTIFICATE_PATH: "/iShare/certificate.pem"
            ISHARE_KEY_PATH: "/iShare/key.pem"
            ISHARE_CLIENT_ID: "${DID}"
            ISHARE_AR_ID: "${DID}"
            ISHARE_AUTHORIZATION_REGISTRY_URL: "http://keyrock:3000"
            ISHARE_DELEGATION_PATH: "/ar/delegation"
            ISHARE_TOKEN_PATH: "/oauth2/token"
            ISHARE_TRUSTED_FINGERPRINTS_LIST: "D2F62092F982CF783D4632BD86FA86C3FBFDB2D8C8A58BC6809163FCF5CD030B"
            ISHARE_TRUST_ANCHOR_URL: "${TRUSTED_ISSUERS_REGISTRY_URL}"
            ISHARE_TRUST_ANCHOR_ID: "${TRUSTED_ISSUERS_REGISTRY_ID}"
            ISHARE_TRUST_ANCHOR_TOKEN_PATH: "${TRUSTED_ISSUERS_REGISTRY_TOKEN_ENDPOINT}"
            ISHARE_TRUST_ANCHOR_TRUSTED_LIST_PATH: "${TRUSTED_ISSUERS_REGISTRY_TRUSTED_LIST_ENDPOINT}"
            ISHARE_TRUSTED_LIST_UPDATE_RATE: "5"
            PROVIDER_ID: "${DID}"
            TRUSTED_VERIFIERS: "http://vc-verifier:8080/.well-known/jwks"
        restart: "always"
        volumes:
            - "./certificates/full-certificate-chain.pem:/iShare/certificate.pem"
            - "./certificates/private-key.pem:/iShare/key.pem"

    kong:
        image: "quay.io/fiware/kong:${KONG_TAG}"
        hostname: "kong"
        environment:
            # LOG_LEVEL: "DEBUG"
            KONG_DATABASE: "off"
            KONG_PROXY_LISTEN: "0.0.0.0:8080"
            KONG_ADMIN_LISTEN: "0.0.0.0:8000"
            KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
            KONG_ADMIN_ERROR_LOG: "/dev/stderr"
            KONG_PROXY_ACCESS_LOG: "/dev/stdout"
            KONG_PROXY_ERROR_LOG: "/dev/stderr"
            KONG_ADMIN_GUI_ACCESS_LOG: "/dev/stdout"
            KONG_ADMIN_GUI_ERROR_LOG: "/dev/stderr"
            KONG_PORTAL_API_ACCESS_LOG: "/dev/stdout"
            KONG_PORTAL_API_ERROR_LOG: "/dev/stderr"
            KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
            KONG_NGINX_WORKER_PROCESSES: "2"
            KONG_NGINX_PROXY_LARGE_CLIENT_HEADER_BUFFERS: "16 128k"
            KONG_NGINX_PROXY_HTTP2_MAX_FIELD_SIZE: "32k"
            KONG_NGINX_PROXY_HTTP2_MAX_HEADER_SIZE: "32k"
            KONG_PLUGINS: "bundled,pep-plugin"
            KONG_PLUGINSERVER_NAMES: "pep-plugin"
            KONG_PLUGINSERVER_PEP_PLUGIN_START_CMD: "/go-plugins/pep-plugin"
            KONG_PLUGINSERVER_PEP_PLUGIN_QUERY_CMD: "/go-plugins/pep-plugin -dump"
        restart: "always"
        volumes:
            - "./config/kong/kong.yaml:/opt/kong/kong.yaml"

    nginx:
        image: "nginx:${NGINX_TAG}"
        hostname: "nginx"
        ports:
            - "443:443"
        restart: "always"
        volumes:
            - "./config/nginx/nginx-consumer.conf:/etc/nginx/nginx.conf"
            - "/etc/letsencrypt:/etc/letsencrypt"
